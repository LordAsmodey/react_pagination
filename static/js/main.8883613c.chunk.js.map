{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","lastPaginationItem","Math","ceil","paginationItems","firstPaginationItemStatus","lastPaginationItemStatus","className","cn","disabled","href","onClick","map","item","active","items","App","useState","length","totalItems","itemsPerPage","setItemsPerPage","setCurrentPage","firstDisplayItem","lastDisplayItem","displayedItems","filter","i","id","value","onChange","event","Number","target","htmlFor","newPage","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA6B,SAACC,GACzC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAkBf,EAAW,EAAGY,GAChCI,EAA4C,IAAhBN,EAC5BO,EAA2BP,IAAgBE,EAEjD,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,oBAUDK,EAAgBQ,KAAI,SAAAC,GAAI,OACvB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IAFhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KATEA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,wBChDFgB,EAAQ1B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAqBC,mBAASF,EAAMG,QAA7BC,EAAP,oBACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBuB,EAApB,KAEMC,EAAmBH,GAAgBrB,EAAc,GAAK,EACtDyB,EAAkBzB,EAAcqB,EAAeD,EACjDA,EACApB,EAAcqB,EAEZK,EAAiBV,EAAMW,QAAO,SAACb,EAAMc,GACzC,GAAIA,GAAKJ,EAAmB,GAAKI,GAAKH,EAAkB,EACtD,OAAOX,KAiBX,OACE,sBAAKN,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EADjC,cACuDC,EADvD,eAC6EL,EAD7E,OAIA,sBAAKZ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOT,EACPU,SApBY,SAACC,GACrBV,EAAgBW,OAAOD,EAAME,OAAOJ,QACpCP,EAAe,IAaT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOsB,EACPrB,QAASsB,EACTrB,YAAaA,EACbC,aA3CqB,SAACmC,GACtBA,IAAYpC,GACduB,EAAea,MA2Cf,6BACGV,EAAeb,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCtEnBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8883613c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (newPage: number) => void\n};\n\nexport const Pagination:React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const lastPaginationItem = Math.ceil(total / perPage);\n  const paginationItems = getNumbers(1, lastPaginationItem);\n  const firstPaginationItemStatus = currentPage === 1;\n  const lastPaginationItemStatus = currentPage === lastPaginationItem;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPaginationItemStatus })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPaginationItemStatus}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {paginationItems.map(item => (\n        <li\n          key={item}\n          className={cn('page-item', { active: item === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: lastPaginationItemStatus })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPaginationItemStatus}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [totalItems] = useState(items.length);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstDisplayItem = itemsPerPage * (currentPage - 1) + 1;\n  const lastDisplayItem = currentPage * itemsPerPage > totalItems\n    ? totalItems\n    : currentPage * itemsPerPage;\n\n  const displayedItems = items.filter((item, i) => {\n    if (i >= firstDisplayItem - 1 && i <= lastDisplayItem - 1) {\n      return item;\n    }\n\n    return undefined;\n  });\n\n  const changeSelectedPage = (newPage: number) => {\n    if (newPage !== currentPage) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  const handlerSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstDisplayItem} - ${lastDisplayItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlerSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={changeSelectedPage}\n      />\n      <ul>\n        {displayedItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}